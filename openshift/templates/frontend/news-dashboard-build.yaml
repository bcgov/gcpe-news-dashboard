kind: Template
apiVersion: v1
labels:
  app: "${NAME}"
  template: "${NAME}-build-template"
  tier: frontend
metadata:
  name: "${NAME}-build-template"
  annotations:
    tags: "angular,nginx"
    iconClass: icon-angularjs
    description: >-
      This template defines resources to perform Chained Builds that compile
      Angular frontend applications from source code and copy the build output
      to Nginx based runtimes.
objects:
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: "${NAME}"
      labels:
        build: builder
      annotations:
        description: >-
          Intermediate image built with NodeJS that holds compiled Angular
          application artifacts; i.e. HTML, JavaScript and CSS.
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: "${NAME}"
      labels:
        build: builder
      creationTimestamp: null
      annotations:
        description: >-
          This is your builder image that compiles the Angular source code. The
          resulting image is then pushed to the ${NAME} image stream.
    spec:
      runPolicy: Parallel
      completionDeadlineSeconds: 1800
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChange: {}
      source:
        type: Git
        git:
          uri: "${GIT_REPO_URL}"
          ref: "${GIT_REF}"
        contextDir: "${SOURCE_CONTEXT_DIR}"
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: "${BUILDER_IMAGE}:latest"
          env:
            - name: CI_BUILD
              value: "${CI_BUILD}"
      output:
        to:
          kind: ImageStreamTag
          name: "${NAME}:latest"
      resources:
        requests:
          cpu: "${CPU_REQUEST}"
          memory: "${MEMORY_REQUEST}"
        limits:
          cpu: "${CPU_LIMIT}"
          memory: "${MEMORY_LIMIT}"
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: "${NAME}-static"
      labels:
        build: runtime
      annotations:
        description: >-
          Final image that copies the artifacts of the NodeJS build into the
          Nginx runtime. This is your *output*/deployable image stream.
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: "${NAME}-static"
      labels:
        build: runtime
      annotations:
        description: >-
          This is the chained build that glues together the output from the
          BUILDER_IMAGE with the RUNTIME_IMAGE. The result is a new image based
          on RUNTIME_IMAGE (that serves static content via Nginx) but with the
          output from BUILDER_IMAGE (i.e. the compiled frontend code).
    spec:
      runPolicy: Parallel
      completionDeadlineSeconds: 1800
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChange:
            from:
              kind: ImageStreamTag
              name: "${NAME}:latest"
      source:
        type: Dockerfile
        dockerfile: |-
          FROM ${RUNTIME_IMAGE}:latest
          COPY * /tmp/app/dist/
          CMD  /usr/libexec/s2i/run
        images:
          - from:
              kind: ImageStreamTag
              name: "${NAME}:latest"
            paths:
              - sourcePath: /opt/app-root/src/dist/.
                destinationDir: tmp
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: "${RUNTIME_IMAGE}:latest"
      output:
        to:
          kind: ImageStreamTag
          name: "${NAME}-static:latest"
      resources:
        requests:
          cpu: "${CPU_REQUEST}"
          memory: "${MEMORY_REQUEST}"
        limits:
          cpu: "${CPU_LIMIT}"
          memory: "${MEMORY_LIMIT}"
parameters:
  - name: NAME
    displayName: Name
    description:
      The name assigned to all of the objects defined in this template.
    required: true
    value: news-dashboard
  - name: BUILDER_IMAGE
    displayName: Builder Image
    description: The image to use as the Builder Image.
    required: true
    value: frontend-yarn-builder
  - name: CI_BUILD
    displayName: Execute a CI build
    description:
      When set to true, the unit tests (if any) will be run during the build.
    required: true
    value: "false"
  - name: RUNTIME_IMAGE
    displayName: Runtime Image
    description: The image to use as the application runtime.
    required: true
    value: frontend-nginx-runtime
  - name: GIT_REPO_URL
    displayName: Git Repository URL
    description: The URL of the repository with your application source code.
    required: true
    value: "https://github.com/bcgov/gcpe-news-dashboard.git"
  - name: GIT_REF
    displayName: Git Reference
    description: >-
      Set this to a branch name, tag or other ref of your repository if you are
      not using the default branch.
    required: true
    value: develop
  - name: SOURCE_CONTEXT_DIR
    displayName: Context Directory
    description: >-
      Set this to the relative path to your project if it is not in the root of
      your repository.
    required: false
    value: ""
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: "1"
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: "The resources Memory limit (in Mi, Gi, etc) for this build."
    required: true
    value: 4Gi
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: "1"
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: "The resources Memory request (in Mi, Gi, etc) for this build."
    required: true
    value: 2Gi
